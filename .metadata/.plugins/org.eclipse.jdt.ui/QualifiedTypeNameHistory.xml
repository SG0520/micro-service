<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.magic.rating.service.entites.Rating"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.ratelimiter.annotation.RateLimiter"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Configurable"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.ServerHttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.server.SecurityWebFilterChain"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="com.magic.gateway.models.AuthResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.annotation.AuthenticationPrincipal"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.oidc.user.OidcUser"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="org.apache.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="feign.RequestInterceptor"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizeRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClientProvider"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.http.client.ClientHttpRequestInterceptor"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClientProviderBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager"/>
    <fullyQualifiedTypeName name="com.magic.user.service.config.interceptor.RestTemplateInterceptor"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.WebFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="java.security.Security"/>
</qualifiedTypeNameHistroy>
